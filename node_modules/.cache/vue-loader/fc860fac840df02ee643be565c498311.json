{"remainingRequest":"/home/runner/work/U1_Practica_Pedagogica_II/U1_Practica_Pedagogica_II/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U1_Practica_Pedagogica_II/U1_Practica_Pedagogica_II/src/views/curso/Tema2.vue?vue&type=template&id=69749aea&lang=pug&","dependencies":[{"path":"/home/runner/work/U1_Practica_Pedagogica_II/U1_Practica_Pedagogica_II/src/views/curso/Tema2.vue","mtime":1745932539046},{"path":"/home/runner/work/U1_Practica_Pedagogica_II/U1_Practica_Pedagogica_II/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Practica_Pedagogica_II/U1_Practica_Pedagogica_II/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U1_Practica_Pedagogica_II/U1_Practica_Pedagogica_II/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U1_Practica_Pedagogica_II/U1_Practica_Pedagogica_II/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Practica_Pedagogica_II/U1_Practica_Pedagogica_II/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jdXJzby1tYWluLWNvbnRhaW5lci5wYi0zCiAgQmFubmVySW50ZXJubyg6c3ViVGl0dWxvPSInMi4gUHJlamFyZMOtbiAnIikKICAuY29udGFpbmVyLnRhcmpldGEudGFyamV0YS0tYmxhbmNhLnAtNC5wLW1kLTUub3ZlcmZsb3ctaGlkZGVuCgogICAgLnJvdy5tYi01CiAgICAgIC5jb2wtbGctNC5tYi0zLm1iLWxnLTAKICAgICAgICBmaWd1cmUKICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWEyLzEucG5nIiwgZGF0YS1hb3M9Inpvb20taW4iKQogICAgICAuY29sLWxnLTgKICAgICAgICAuYmctY29sb3ItMS5wLTQubWItMyhkYXRhLWFvcz0iZmFkZS1sZWZ0IikKICAgICAgICAgIC5yb3cuYWxpZ24taXRlbXMtc3RhcnQKICAgICAgICAgICAgLmNvbC1sZy1hdXRvCiAgICAgICAgICAgICAgaW1nKHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYTIvMi5zdmciLCBzdHlsZT0ibWF4LXdpZHRoOiA5MHB4IikubXgtYXV0bwogICAgICAgICAgICAuY29sLWxnCiAgICAgICAgICAgICAgcC5tYi0wIENhbWFyZ28gKDIwMTQpLCBhZmlybWEgcXVlIGxvcyBwcmltZXJvcyBhw7FvcyBkZSB2aWRhIHNvbiBmdW5kYW1lbnRhbGVzIHBhcmEgc2VudGFyIGxhcyBiYXNlcyBkZWwgZGVzYXJyb2xsbyBpbnRlZ3JhbCBkZSBsb3MgbmnDsW9zIHkgbGFzIG5pw7Fhcy4gRW4gZXN0ZSBzZW50aWRvLCBsYSBlZHVjYWNpw7NuIGVuIHByZWphcmTDrW4gbm8gc29sbyBzZSBlbmZvY2EgZW4gZWwgYXByZW5kaXphamUgY29nbml0aXZvLCBzaW5vIHRhbWJpw6luIGVuIGxhIGNvbnN0cnVjY2nDs24gZGUgbGEgaWRlbnRpZGFkIHkgbGEgYXV0b25vbcOtYSwgcHJvbW92aWVuZG8gZWwgZGVzY3VicmltaWVudG8gZGUgaGFiaWxpZGFkZXMgeSBlbCBmb3J0YWxlY2ltaWVudG8gZGUgbGEgY29uZmlhbnphIGVuIHPDrSBtaXNtb3MuIEVzdG9zIHByaW5jaXBpb3MgZXN0w6FuIGVubWFyY2Fkb3MgZW4gbGEgbm9ybWF0aXZhIGVkdWNhdGl2YSBjb2xvbWJpYW5hLCBxdWUgYnVzY2EgZ2FyYW50aXphciB1bmEgZWR1Y2FjacOzbiBpbmljaWFsIGRlIGNhbGlkYWQsIGVxdWl0YXRpdmEgZSBpbmNsdXNpdmEuCiAgICAgICAgcChkYXRhLWFvcz0iZmFkZS1sZWZ0IikgRGVzZGUgZXN0YSBwZXJzcGVjdGl2YSwgbGFzIGV4cGVyaWVuY2lhcyBwZWRhZ8OzZ2ljYXMgZW4gcHJlamFyZMOtbiwganVlZ2FuIHVuIHBhcGVsIGVzZW5jaWFsIGVuIGVsIGRlc2Fycm9sbG8gaW5mYW50aWw6CiAgICAKICAgIFRhYnNDLmNvbG9yLWFjZW50by1jb250ZW5pZG8ubWItNQogICAgICAudGFicy1jb250ZW50LmJvcmRlci5weC00LnAtbWQtNS5weS0zKHRpdHVsbz0iQWN0aXZpZGFkZXMgc2lnbmlmaWNhdGl2YXMiIDppY29uPSJyZXF1aXJlKCdAL2Fzc2V0cy9idWxsZXRzLzEuc3ZnJykiKQogICAgICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWNlbnRlcgogICAgICAgICAgLmNvbC1sZy03LmNvbC14bC04Lm1iLTQubWItbWQtMAogICAgICAgICAgICBoNCBBY3RpdmlkYWRlcyBzaWduaWZpY2F0aXZhcwogICAgICAgICAgICBwIEEgdHJhdsOpcyBkZSBhY3RpdmlkYWRlcyBzaWduaWZpY2F0aXZhcywgc2UgZm9ydGFsZWNlbiBsYXMgaGFiaWxpZGFkZXMgY29tdW5pY2F0aXZhcyB5IGV4cHJlc2l2YXMsIGVzdGltdWxhbmRvIGxhIGN1cmlvc2lkYWQgeSBlbCBwZW5zYW1pZW50byBjcmVhdGl2by4gTGEgZXhwbG9yYWNpw7NuIGRlbCBlbnRvcm5vIHNlIGNvbnZpZXJ0ZSBlbiB1bmEgZXN0cmF0ZWdpYSBjbGF2ZSBwYXJhIGVsIGFwcmVuZGl6YWplLCBmYXZvcmVjaWVuZG8gZWwgZGVzYXJyb2xsbyBjb2duaXRpdm8geSBlbW9jaW9uYWwgZGUgbG9zIG5pw7FvcyB5IGxhcyBuacOxYXMuIEVzdG9zIHByb3DDs3NpdG9zIHNlIGVuY3VlbnRyYW4gYWxpbmVhZG9zIGNvbiBsbyBlc3RhYmxlY2lkbyBlbiBsYSBMZXkgR2VuZXJhbCBkZSBFZHVjYWNpw7NuIHkgbG9zIGxpbmVhbWllbnRvcyBkZWwgTWluaXN0ZXJpbyBkZSBFZHVjYWNpw7NuIE5hY2lvbmFsLgogICAgCiAgICAgICAgICAuY29sLW1kLTguY29sLWxnLTUuY29sLXhsLTQKICAgICAgICAgICAgZmlndXJlKGRhdGEtYW9zPSJ6b29tLWluIikKICAgICAgICAgICAgICBpbWcoc3JjPSdAL2Fzc2V0cy9jdXJzby90ZW1hMi8zLnBuZycsIGFsdD0nJykKICAgIAogICAgICAudGFicy1jb250ZW50LmJvcmRlci5weC00LnAtbWQtNS5weS0zKHRpdHVsbz0iSW50ZXJhY2Npw7NuIiA6aWNvbj0icmVxdWlyZSgnQC9hc3NldHMvYnVsbGV0cy8xLnN2ZycpIikKICAgICAgICAucm93Lmp1c3RpZnktY29udGVudC1jZW50ZXIKICAgICAgICAgIC5jb2wtbGctNy5jb2wteGwtOC5tYi00Lm1iLW1kLTAKICAgICAgICAgICAgaDQgSW50ZXJhY2Npw7NuCiAgICAgICAgICAgIHAgTGEgaW50ZXJhY2Npw7NuIGNvbiBsb3MgcGFyZXMgY29icmEgZ3JhbiByZWxldmFuY2lhIGVuIGVzdGEgZXRhcGEsIHB1ZXN0byBxdWUgbG9zIG5pw7FvcyBhcHJlbmRlbiBhIGNvbnZpdmlyLCBhIHRyYWJhamFyIGVuIGVxdWlwbyB5IGEgcmVzb2x2ZXIgY29uZmxpY3RvcywgYXNwZWN0b3MgZnVuZGFtZW50YWxlcyBwYXJhIHN1IGRlc2Fycm9sbG8gc29jaWFsLiBMYSBjb25zdHJ1Y2Npw7NuIGRlIHJlbGFjaW9uZXMgYXJtb25pb3NhcyB5IHJlc3BldHVvc2FzIGRlbnRybyBkZWwgYXVsYSB5IGVsIGVudG9ybm8gZWR1Y2F0aXZvLCBlcyB1biBvYmpldGl2byBjbGF2ZSBlbiBsYSBlZHVjYWNpw7NuIGluaWNpYWwsIHBvcnF1ZSBjb250cmlidXllIGEgc3UgYmllbmVzdGFyIGVtb2Npb25hbCB5IHNvY2lhbC4KICAgIAogICAgICAgICAgLmNvbC1tZC04LmNvbC1sZy01LmNvbC14bC00CiAgICAgICAgICAgIGZpZ3VyZShkYXRhLWFvcz0iem9vbS1pbiIpCiAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYTIvNC5wbmcnLCBhbHQ9JycpCiAgICAKICAgIC5iZy1mdWxsLXdpZHRoLmJnLWNvbG9yLTQKICAgICAgLnB4LTQucHgtbWQtNS5wYi1tZC0zCiAgICAgICAgLnJvdy5tYi01CiAgICAgICAgICAuY29sLWxnLTQubWItMy5tYi1sZy0wCiAgICAgICAgICAgIGZpZ3VyZQogICAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWEyLzUucG5nIiwgZGF0YS1hb3M9Inpvb20taW4iKQogICAgICAgICAgLmNvbC1sZy04CiAgICAgICAgICAgIC5iZy1jb2xvci0zLnAtNC5tYi0zKGRhdGEtYW9zPSJmYWRlLWxlZnQiKQogICAgICAgICAgICAgIHAubWItMCBQYXJhIGNvbXByZW5kZXIgY8OzbW8gc2UgbWF0ZXJpYWxpemFuIGVzdG9zIHByaW5jaXBpb3MgZW4gbGEgcHLDoWN0aWNhIGVkdWNhdGl2YSwgZXMgZnVuZGFtZW50YWwgcmVhbGl6YXIgdW4gZWplcmNpY2lvIGRlIG9ic2VydmFjacOzbiB5IGFuw6FsaXNpcyBkZW50cm8gZGUgbGFzIGluc3RpdHVjaW9uZXMgZGUgZWR1Y2FjacOzbiBpbmljaWFsLiBBIHRyYXbDqXMgZGUgbGEgcmV2aXNpw7NuIGRvY3VtZW50YWwgeSBsYSBleHBsb3JhY2nDs24gZGUgbGFzIGRpbsOhbWljYXMgaW5zdGl0dWNpb25hbGVzIGVuIHByZWphcmTDrW4geSBqYXJkw61uLCBlcyBwb3NpYmxlIGlkZW50aWZpY2FyIGPDs21vIHNlIGRlc2Fycm9sbGFuIGxhcyBleHBlcmllbmNpYXMgZGUgYXByZW5kaXphamUgeSBkZSBxdcOpIG1hbmVyYSBzZSBhcnRpY3VsYW4gY29uIGxvcyBsaW5lYW1pZW50b3MgcGVkYWfDs2dpY29zIHkgbm9ybWF0aXZvcy4KICAgICAgICAgICAgcChkYXRhLWFvcz0iZmFkZS1sZWZ0IikgRW4gZXN0ZSBzZW50aWRvLCByZXN1bHRhIHBlcnRpbmVudGUgcmVmbGV4aW9uYXIgc29icmUgbGEgb3JnYW5pemFjacOzbiB5IGVqZWN1Y2nDs24gZGUgbGFzIGV4cGVyaWVuY2lhcyBlbiBlc3RvcyBuaXZlbGVzOiAKICAgICAgICAKICAgICAgICBkaXYucm93Lmp1c3RpZnktY29udGVudC1jZW50ZXIuYWxpZ24taXRlbXMtc3RyZXRjaC5tYi01CiAgICAgICAgICBkaXYuY29sLWxnLTQubWItNChkYXRhLWFvcz0iem9vbS1pbi11cCIpCiAgICAgICAgICAgIGRpdi5iZy1jb2xvci13aGl0ZS5ib3gtc2hhZG93LnB4LTQucHktNS5oLTEwMAogICAgICAgICAgICAgIGltZy5teC1hdXRvLmQtYmxvY2subWItNChzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWEyLzYuc3ZnIiBhbHQ9IiIgc3R5bGU9IndpZHRoOiA5MHB4IikKICAgICAgICAgICAgICBoNS50ZXh0LWNlbnRlciBQcmltZXJvCiAgICAgICAgICAgICAgcC5tYi0wLnRleHQtY2VudGVyIMK/Q8OzbW8gc2UgZXN0cnVjdHVyYW4gbGFzIGFjdGl2aWRhZGVzIHBlZGFnw7NnaWNhcyBlbiBsYSBpbnN0aXR1Y2nDs24/CiAgICAgICAgCiAgICAgICAgICBkaXYuY29sLWxnLTQubWItNChkYXRhLWFvcz0iem9vbS1pbi11cCIpCiAgICAgICAgICAgIGRpdi5iZy1jb2xvci13aGl0ZS5ib3gtc2hhZG93LnB4LTQucHktNS5oLTEwMAogICAgICAgICAgICAgIGltZy5teC1hdXRvLmQtYmxvY2subWItNChzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWEyLzYuc3ZnIiBhbHQ9IiIgc3R5bGU9IndpZHRoOiA5MHB4IikKICAgICAgICAgICAgICBoNS50ZXh0LWNlbnRlciBTZWd1bmRvCiAgICAgICAgICAgICAgcC5tYi0wLnRleHQtY2VudGVyIMK/RW4gcXXDqSBtZWRpZGEgc2UgZXZpZGVuY2lhbiBsb3MgcHJpbmNpcGlvcyBub3JtYXRpdm9zIHkgcGVkYWfDs2dpY29zIGVuIGxhIHByw6FjdGljYSBlZHVjYXRpdmE/CiAgICAgICAgCiAgICAgICAgICBkaXYuY29sLWxnLTQubWItNChkYXRhLWFvcz0iem9vbS1pbi11cCIpCiAgICAgICAgICAgIGRpdi5iZy1jb2xvci13aGl0ZS5ib3gtc2hhZG93LnB4LTQucHktNS5oLTEwMAogICAgICAgICAgICAgIGltZy5teC1hdXRvLmQtYmxvY2subWItNChzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWEyLzYuc3ZnIiBhbHQ9IiIgc3R5bGU9IndpZHRoOiA5MHB4IikKICAgICAgICAgICAgICBoNS50ZXh0LWNlbnRlciBUZXJjZXJvCiAgICAgICAgICAgICAgcC5tYi0wLnRleHQtY2VudGVyIMK/Q8OzbW8gaW5mbHV5ZW4gZXN0b3MgYXNwZWN0b3MgZW4gZWwgcHJvY2VzbyBmb3JtYXRpdm8gZGUgbG9zIG5pw7FvcyB5IGxhcyBuacOxYXM/CiAgICAKCiAgICAjdF8yXzEudGl0dWxvLXNlZ3VuZG8oZGF0YS1hb3M9ImZsaXAtdXAiKQogICAgICBoMiAjW3NwYW4gMi4xXSBQcm9ww7NzaXRvcyBkZSBsYSBlZHVjYWNpw7NuIGVuIHByZWphcmTDrW4KICAgIAogICAgcC5tYi00IExhIGVkdWNhY2nDs24gZW4gcHJlamFyZMOtbiBjdW1wbGUgdW4gcGFwZWwgZnVuZGFtZW50YWwgZW4gbGEgZm9ybWFjacOzbiBpbnRlZ3JhbCBkZSBsb3MgbmnDsW9zLCBwcm9tb3ZpZW5kbyBlbCBkZXNhcnJvbGxvIGRlIHN1IGlkZW50aWRhZCwgYXV0b25vbcOtYSB5IGhhYmlsaWRhZGVzIGNvbXVuaWNhdGl2YXMuCgogICAgLmJnLWZ1bGwtd2lkdGguYmctY29sb3ItOC5tYi01CiAgICAgIC5weC00LnAtbWQtNQogICAgICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWNlbnRlci5hbGlnbi1pdGVtcy1jZW50ZXIKICAgICAgICAgIC5jb2wtbGctNy5tYi0zLm1iLWxnLTAKICAgICAgICAgICAgaDIubWItNChkYXRhLWFvcz0iZmxpcC11cCIpIFByb3DDs3NpdG9zIGRlIGxhIGVkdWNhY2nDs24gZW4gcHJlamFyZMOtbgogICAgICAgICAgICBwLm1iLTQoZGF0YS1hb3M9ImZhZGUtcmlnaHQiKSBFbiBlbCBQREYgPGI+UHJvcMOzc2l0b3MgZGUgbGEgZWR1Y2FjacOzbiBlbiBwcmVqYXJkw61uPC9iPiwgc2UgYW5hbGl6YW4gbG9zIG9iamV0aXZvcyBlc2VuY2lhbGVzIGRlIGVzdGEgZXRhcGEsIGRlc3RhY2FuZG8gZXN0cmF0ZWdpYXMgcGFyYSBmb3J0YWxlY2VyIGxhIGV4cGxvcmFjacOzbiwgZWwgcGVuc2FtaWVudG8gY3JlYXRpdm8geSBsYSBleHByZXNpw7NuIGluZmFudGlsLiBBZGVtw6FzLCBzZSBlc3R1ZGlhIGPDs21vIGxhIGludGVyYWNjacOzbiBjb24gZWwgZW50b3JubyB5IGVsIGp1ZWdvIHBvdGVuY2lhbiBlbCBhcHJlbmRpemFqZSwgZ2FyYW50aXphbmRvIGV4cGVyaWVuY2lhcyBzaWduaWZpY2F0aXZhcyBxdWUgcmVzcGV0YW4gbG9zIHJpdG1vcyBpbmRpdmlkdWFsZXMgZGUgY2FkYSBuacOxby4KICAgIAogICAgICAgICAgICBhLmFuZXhvLm1iLTQuYmctd2hpdGUudy1maXQoOmhyZWY9Im9idGVuZXJMaW5rKCcvZG93bmxvYWRzL0FuZXhvXzIucGRmJykiIHRhcmdldD0iX2JsYW5rIikoZGF0YS1hb3M9ImZsaXAtdXAiKQogICAgICAgICAgICAgIC5hbmV4b19faWNvbm8oOnN0eWxlPSJ7J2JhY2tncm91bmQtY29sb3InOiAnI0ZDREZEQid9IikKICAgICAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL3RlbXBsYXRlL2ljb25vLXBkZi5zdmciKQogICAgICAgICAgICAgIC5hbmV4b19fdGV4dG8KICAgICAgICAgICAgICAgIHAgPHN0cm9uZz5BbmV4by4gPC9zdHJvbmc+IFByb3DDs3NpdG9zIGRlIGxhIGVkdWNhY2nDs24gZW4gcHJlamFyZMOtbi4KICAgIAogICAgICAgICAgLmNvbC1sZy01CiAgICAgICAgICAgIGZpZ3VyZShkYXRhLWFvcz0iem9vbS1pbiIpCiAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYTIvNy5wbmcnLCBhbHQ9JycpCgogICAgLmJnLWZ1bGwtd2lkdGguYm9yZGVyLXRvcC5jb2xvci1wcmltYXJpbwogICAgICAucC00LnAtbWQtNQogICAgICAgIGgyKGRhdGEtYW9zPSJmYWRlLWxlZnQiKSBNQVRFUklBTCBDT01QTEVNRU5UQVJJTwogICAgICAgIC5yb3cubWF0ZXJpYWwtY29tcGxlbWVudGFyaW8KICAgICAgICAgIC5jb2wtMTIuY29sLW1kLTYuY29sLWxnLTcKICAgICAgICAgICAgcCBMb3MgaW52aXRhbW9zIGEgZXhwbG9yYXIgZWwgbWF0ZXJpYWwgY29tcGxlbWVudGFyaW8gZGUgZXN0ZSBjdXJzbywgZW4gZXN0YSBzZWNjacOzbiBlbmNvbnRyYXLDoSByZWN1cnNvcyBxdWUgbGUgcGVybWl0aXLDoW4gcHJvZnVuZGl6YXIgIHkgZW5yaXF1ZWNlciBzdSBhcHJlbmRpemFqZSBlbiBsb3MgdGVtYXMgdHJhdGFkb3MgZW4gZXN0YSB1bmlkYWQuCgogICAgICAgICAgICBwLmQtZmxleC5teS00CiAgICAgICAgICAgICAgaW1nLm1lLTMoc3JjPSdAL2Fzc2V0cy9jb21wb25lbnRlcy9saW5rLnN2ZycgOnN0eWxlPSJ7J21heC13aWR0aCc6JzE2cHgnfSIpCiAgICAgICAgICAgICAgYShocmVmPSJodHRwczovL2VsaWJyby5uZXQvZXMvbGMvdGVjbm9sb2dpY2FkZWxvcmllbnRlL3RpdHVsb3MvMTE1MjY2IiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIikgR2VydmlsbGEgQ2FzdGlsbG8sIEUuIFNvcmlhbm8gRMOtYXosIEEuICYgQ2FzYXJlcyBHYXJjw61hLCBQLiAoMjAxNCkuIFRlb3LDrWEgZGUgbGEgZWR1Y2FjacOzbjogZWR1Y2FjacOzbiBpbmZhbnRpbDogKCBlZC4pLiBEaWZ1c29yYSBMYXJvdXNzZSAtIEVkaWNpb25lcyBQaXLDoW1pZGUuICAKCiAgICAgICAgICAgIHAuZC1mbGV4Lm15LTQKICAgICAgICAgICAgICBpbWcubWUtMyhzcmM9J0AvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnJyA6c3R5bGU9InsnbWF4LXdpZHRoJzonMTZweCd9IikKICAgICAgICAgICAgICBhKGhyZWY9Imh0dHBzOi8vZWxpYnJvLm5ldC9lcy9sYy90ZWNub2xvZ2ljYWRlbG9yaWVudGUvdGl0dWxvcy8xMTU1OTQgIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIikgUHJhZG9zIEdhbGxhcmRvLCBNLiBELiBNLiBTw6FuY2hleiBKaW3DqW5leiwgVi4gJiBTw6FuY2hleiBRdWVpamEsIEkuICgyMDE2KS4gTWFudWFsIGRlIHBzaWNvbG9nw61hIGRlIGxhIGVkdWNhY2nDs24gcGFyYSBkb2NlbnRlIGRlIGVkdWNhY2nDs24gaW5mYW50aWwgeSBwcmltYXJpYTogKDIgZWQuKS4gRGlmdXNvcmEgTGFyb3Vzc2UgLSBFZGljaW9uZXMgUGlyw6FtaWRlLiAKICAgICAgICAgICAgcC5kLWZsZXgubXktNAogICAgICAgICAgICAgIGltZy5tZS0zKHNyYz0nQC9hc3NldHMvY29tcG9uZW50ZXMvbGluay5zdmcnIDpzdHlsZT0ieydtYXgtd2lkdGgnOicxNnB4J30iKQogICAgICAgICAgICAgIGEoaHJlZj0iaHR0cHM6Ly9yZXZpc3Rhcy51Y3YuZWR1LnBlL2luZGV4LnBocC91Y3YtaGFjZXIvYXJ0aWNsZS92aWV3LzU1MSAiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiKSBVcmJpbmEsIE0uIFIuIEQuIEMuIE4uLCAmIEFndWluYWdhLCBNLiBDLiBQLiAoMjAyMCkuIEVsIGp1ZWdvIGVuIGxhIGlkZW50aWRhZCB5IGF1dG9ub23DrWEgZGVsIG5pw7FvLiBVQ1YgSGFjZXIsIDkoMSksIDExLTE3LiAKICAgICAgICAgICAgcC5kLWZsZXgubXktNAogICAgICAgICAgICAgIGltZy5tZS0zKHNyYz0nQC9hc3NldHMvY29tcG9uZW50ZXMvbGluay5zdmcnIDpzdHlsZT0ieydtYXgtd2lkdGgnOicxNnB4J30iKQogICAgICAgICAgICAgIGEoaHJlZj0iaHR0cHM6Ly9ibG9ncy5pYWRiLm9yZy9lZHVjYWNpb24vZXMvY2F0ZWdvcnkvZGVzYXJyb2xsby1pbmZhbnRpbC10ZW1wcmFuby15LWVkdWNhY2lvbi1pbmljaWFsLyAiIHRhcmdldD0iX2JsYW5rIiByZWw9Im5vb3BlbmVyIG5vcmVmZXJyZXIiKSBEZXNhcnJvbGxvIGluZmFudGlsIHRlbXByYW5vIHkgZWR1Y2FjacOzbiBpbmljaWFsIEFyY2hpdmVzIC0gRW5mb3F1ZSBFZHVjYWNpw7NuLiAocy5mLikuIEVuZm9xdWUgRWR1Y2FjacOzbi4gCiAgICAgICAgICAgIHAuZC1mbGV4Lm15LTQKICAgICAgICAgICAgICBpbWcubWUtMyhzcmM9J0AvYXNzZXRzL2NvbXBvbmVudGVzL2xpbmsuc3ZnJyA6c3R5bGU9InsnbWF4LXdpZHRoJzonMTZweCd9IikKICAgICAgICAgICAgICBhKGhyZWY9Imh0dHBzOi8vYmxvZ3MuaWFkYi5vcmcvZGVzYXJyb2xsby1pbmZhbnRpbC9lcy81LW1hbmVyYXMtZGUtbWVqb3Jhci1lbC1hcHJlbmRpemFqZS1kZS1sb3Mtbmlub3MvICIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciIpIDUgbWFuZXJhcyBkZSBtZWpvcmFyIGVsIGFwcmVuZGl6YWplIGRlIGxvcyBuacOxb3MuIChzLmYuKS4gUHJpbWVyb3MgUGFzb3MuIAoKICAgICAgICAgICAgcC5kLWZsZXgubXktNAogICAgICAgICAgICAgIGltZy5tZS0zKHNyYz0nQC9hc3NldHMvdGVtcGxhdGUvaWNvbm8teXQuc3ZnJyA6c3R5bGU9InsnbWF4LXdpZHRoJzonMTZweCd9IikKICAgICAgICAgICAgICBhKGhyZWY9Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9VHEwUl9Fb2l1blkgIiB0YXJnZXQ9Il9ibGFuayIgcmVsPSJub29wZW5lciBub3JlZmVycmVyIikgSU5ERUUuICgyMDIyLCAyOCBkZSBmZWJyZXJvKS4gRWwgc2VudGlkbyBkZWwgUHJveWVjdG8gRWR1Y2F0aXZvIEluc3RpdHVjaW9uYWwgY29tbyBpbnN0cnVtZW50byBkZSBjb25zdHJ1Y2Npw7NuIGRlIGlkZW50aWRhZC4gW1ZpZGVvXS4gWW91VHViZS4gCiAgICAgICAgICAgIHAuZC1mbGV4Lm15LTQKICAgICAgICAgICAgICBpbWcubWUtMyhzcmM9J0AvYXNzZXRzL3RlbXBsYXRlL2ljb25vLXl0LnN2ZycgOnN0eWxlPSJ7J21heC13aWR0aCc6JzE2cHgnfSIpCiAgICAgICAgICAgICAgYShocmVmPSJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PVB6aU5EX1FYZWVJICIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciIpIEluZmFuY2lhIGVuIFBvc2l0aXZvLiAoMjAxOSwgMTUgZGUgbm92aWVtYnJlKS4gQ8OzbW8gYXByZW5kZW4gbG9zIG5pw7Fvcy4gVGVvcsOtYSBkZWwgZGVzYXJyb2xsbyBjb2duaXRpdm8gZGUgSmVhbiBQaWFnZXQuIFtWaWRlb10uIFlvdVR1YmUuIAoKICAgICAgICAgIC5jb2wtMTIuY29sLW1kLTYuY29sLWxnLTMub2Zmc2V0LWxnLTEKICAgICAgICAgICAgZmlndXJlCiAgICAgICAgICAgICAgaW1nKHNyYz0nQC9hc3NldHMvY29tcG9uZW50ZXMvbWF0ZXJpYWwtY29tcGxlbWVudGFyaW8uc3ZnJywgYWx0PScnKQoK"},null]}